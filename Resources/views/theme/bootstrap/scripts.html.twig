<script type="text/javascript">
    $(document).ready(function(){
        var directory_up = $("#{{ id }}.filetree .directory-up");
        var search_container = $("#{{ id }}.filetree .search-input");
        var search_input = $("#{{ id }}.filetree .search-input input");

        if( $(window).width() <= 768 ){
            search_container.hide();

            var is_search_visible = false;

            search_input.on("blur",function (){
                var searchquery = search_input.val();
                if( searchquery !== ""){
                    $('#{{ id }}.filetree').data('#{{ id }}', "filemanager").search( searchquery );
                }
            });

            $("#{{ id }}.filetree .search-button").on("click", function(){

                if( directory_up.is(":visible") ){
                    directory_up.hide();
                    search_container.show();
                    search_input.focus();
                } else {
                    directory_up.show();
                    search_container.hide();
                }
            });
        }
    });

    var bootstrap_icon = function( mimetype, extension ){
        var icon = "fa-file-o";

        switch( mimetype ){
            case "application/msword":
            case "application/vnd.oasis.opendocument.text":
                icon = "fa-file-word-o";
                break;

            case "multipart/x-zip":
            case "application/x-compressed":
            case "application/x-zip-compressed":
            case "application/zip":
                icon = "fa-file-archive-o";
                break;

            case "text/html":
            case "text/javascript":
            case "text/ecmascript":
            case "text/css":
                icon = "fa-file-code-o";
                break;

            case "application/pdf":
                icon = "fa-file-pdf-o";
                break;

            case "video/x-flv":
            case "video/mp4":
            case "application/x-mpegURL":
            case "video/MP2T":
            case "video/3gpp":
            case "video/quicktime":
            case "video/x-msvideo":
            case "video/x-ms-wmv":
                icon = "fa-file-video-o";
                break;

            case "audio/basic":
            case "auido/L24":
            case "audio/mid":
            case "audio/mpeg":
            case "audio/mp4":
            case "audio/x-aiff":
            case "audio/x-mpegurl":
            case "audio/vnd.rn-realaudio":
            case "audio/ogg":
            case "audio/vorbis":
            case "audio/vnd.wav":
                icon = "fa-file-audio-o";
                break;
        }

        if( icon == "fa-file-o" ){
            if( typeof mimetype == "string" && mimetype.indexOf("image") > -1){
                icon = "fa-file-image-o";
            } else {
                switch( extension ){
                    case "php":
                    case "html":
                    case "js":
                    case "css":
                    case "xml":
                    case "yml":
                        icon = "fa-file-code-o";
                        break;
                }
            }
        }



        return icon;
    };

    var recognize_filemanager_defaults_{{ id }} = { debug: true,
        i18n: {
            rename: "{{ 'Rename'|trans }}",
            cut: "{{ 'Cut'|trans }}",
            paste: "{{ 'Paste'|trans }}",
            download: "{{ 'Download'|trans }}",
            "delete": "{{ 'Delete'|trans }}"
        }
    };

    var recognize_filemanager_config_{{ id }} = (true, recognize_filemanager_defaults_{{ id }}, {{ filemanager_config|json_encode|raw  }});
    recognize_filemanager_config_{{ id }}['filerowFormat'] = function( file ){

        // Set the icon as a file or a directory
        var icon = "<i class=\"fa " + bootstrap_icon( file.mimetype, file.file_extension ) + " pull-left\"></i>";
        if( file.type == "dir" ){
            icon = "<i class=\"fa fa-folder-open pull-left\"></i>";
        }

        return "<tr tabindex=\"0\" class=\"noselect\"><td class=\"col-sm-3 col-xs-6\">" + icon + file.name + "</td><td class=\"col-xs-1\">" + file.size  + "</td><td class=\"col-xs-1\">" + file.date_modified  + "</td></tr>";
    };

    recognize_filemanager_config_{{ id }}['renamerowFormat'] = function( file ){

        // Set the icon as a file or a directory
        var icon = "<i class=\"fa " + bootstrap_icon( file.mimetype, file.file_extension ) + " pull-left\"></i>";
        if( file.type == "dir" ){
            icon = "<i class=\"fa fa-folder-open pull-left\"></i>";
        }

        var name = $( file.name );
        name.addClass('form-control');
        var content = $('<div></div>');
        content.append( name );
        return "<tr tabindex=\"0\" class=\"noselect\"><td class=\"col-sm-3 col-xs-6\">" + icon + content.get(0).innerHTML + "</td><td class=\"col-xs-1\">" + file.size  + "</td><td class=\"col-xs-1\">" + file.date_modified  + "</td></tr>";
    };

    recognize_filemanager_config_{{ id }}['fileCellFormat'] = function( file ){

        // Set the icon as a file or a directory
        var icon = "<i class=\"fa " + bootstrap_icon( file.mimetype, file.file_extension ) + "\"></i>";
        if( file.type == "dir" ){
            icon = "<i class=\"fa fa-folder-open\"></i>";
        }

        if( typeof file.preview !== "undefined") {
            var directorysep = "";
            if( file.preview.charAt(0) != "/"){
                directorysep = "/";
            }

            icon = "<span><img src=\"" + location.origin + directorysep + file.preview + "\" /></span>";
        }

        var iconcontainer = "<div class=\"icon-container\"><div class=\"center-helper\"></div>" + icon + "</div>";

        var contents = "<div class=\"cell-content\"><span>" + file.name + "</span></div>";

        return "<a tabindex=\"0\" class=\"filemanager-cell\">" + iconcontainer + contents + "</div>";
    };

    recognize_filemanager_config_{{ id }}['renamecellFormat'] = function( file ){

        // Set the icon as a file or a directory
        var icon = "<i class=\"fa " + bootstrap_icon( file.mimetype, file.file_extension ) + "\"></i>";
        if( file.type == "dir" ){
            icon = "<i class=\"fa fa-folder-open\"></i>";
        }

        if( typeof file.preview !== "undefined") {
            var directorysep = "";
            if( file.preview.charAt(0) != "/"){
                directorysep = "/";
            }

            icon = "<span><img src=\"" + location.origin + directorysep + file.preview + "\" /></span>";
        }

        var iconcontainer = "<div class=\"icon-container\"><div class=\"center-helper\"></div>" + icon + "</div>";

        var contents = "<div class=\"cell-content\"><span>" + file.name + "</span></div>";

        return "<a tabindex=\"0\" class=\"filemanager-cell\">" + iconcontainer + contents + "</div>";
    };


    recognize_filemanager_config_{{ id }}['uploadFormat'] = function( action, buttonid ){
        return "<div class=\"col-sm-2\"><a href=\"#\" class=\"btn\" id=\"" + buttonid + "\">Upload</a></div>";
    };

    var filetree =  $('#{{ id }}');
    var treelement_{{ id }} =  filetree.get(0);

    filetree.filemanager( recognize_filemanager_config_{{ id }} );

    $.data(treelement_{{ id }}, "filemanager")
            .on("filemanager:api:loading", function(){
        var overlayreference = $( "#{{ id }} .overlayreference" );
        var rowPos = overlayreference.position();
        var bottomTop = rowPos.top;
        var bottomLeft = rowPos.left;

        $("#{{ id }} .overlay").css("top", bottomTop).css("left", bottomLeft ).css("width", overlayreference.parent().width())
                .css("height", overlayreference.height())
                .css("display", "table");

        // Hide the loading animation after the content has been rendered
    });
    $.data(treelement_{{ id }}, "filemanager").on("filemanager:view:rendered", function(){
        $("#{{ id }} .overlay").css("display", "none");
    });

    $.data(treelement_{{ id }}, "filemanager").on("filemanager:api:uploading", function(){
                console.log( "UPLOADING {{ id }}" );

        $("#{{ id }} .options").hide();
        $("#{{ id }} .upload-area").show();

        $("#{{ id }} .upload-cancel-button").focus();

    });
    $.data(treelement_{{ id }}, "filemanager").on("filemanager:api:upload_done", function(){

        $(".filetree .options").show();
        $(".filetree .upload-area").hide();
    });

    $.data(treelement_{{ id }}, "filemanager").on("filemanager:tree:sort", function( eventobj ) {
        $("#{{ id }} .sorting-container").find("i").removeClass("fa-caret-up").removeClass("fa-caret-down").addClass("fa-sort");

        var element = $("#{{ id }} .sort-by-filename");
        switch( eventobj.type ){
            case "date_modified":
                element = $('#{{ id }} .sort-by-date');
                break;
            case "size":
                element = $('#{{ id }} .sort-by-filesize');
                break;
        }

        if( eventobj.reverse ){
            element.children("i").removeClass('fa-caret-down').removeClass('fa-sort').addClass('fa-caret-up');
        } else {
            element.children("i").removeClass('fa-caret-up').removeClass('fa-sort').addClass('fa-caret-down');
        }
    });

    $.data(treelement_{{ id }}, "filemanager").on("filemanager:api:error", function( response ) {
        $("#{{ id }} .error-focus-button").focus();
    });

    var isAndroid = navigator.userAgent.toLowerCase().indexOf("android") > -1;

    // Manage the backbutton for Android
    if( isAndroid ){
        $.data(treelement_{{ id }}, "filemanager").on("filemanager:api:error", function( response ){
            history.pushState("{{ id }} error", null, location.href);
            history.pushState("#", null, location.href);
        });

        $(window).bind('popstate', function( event ){
            var state = event.originalEvent.state;
            if( state == "{{ id }} error"){
                $("#{{ id }} .overlay").css("display", "none");
                $('#{{ id }} .filemanager-alert').hide();
                history.back();
            }
        });
    }

    $('#{{ id }} .close-error-modal').on("click",function(){
        $("#{{ id }} .overlay").css("display", "none");
        $('#{{ id }} .filemanager-alert').hide();

        // Manage the backbutton for Android
        if( isAndroid ){
            history.back();
        }
    });
</script>